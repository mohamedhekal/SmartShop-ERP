version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: smartshop_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: smartshop_erp
      MYSQL_USER: smartshop_user
      MYSQL_PASSWORD: smartshop_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - smartshop_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartshop_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartshop_network

  # Laravel Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: smartshop_api
    restart: unless-stopped
    environment:
      APP_ENV: local
      APP_DEBUG: true
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: smartshop_erp
      DB_USERNAME: smartshop_user
      DB_PASSWORD: smartshop_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8000:8000"
    volumes:
      - ./api:/var/www/html
      - ./api/storage:/var/www/html/storage
    depends_on:
      - mysql
      - redis
    networks:
      - smartshop_network
    command: >
      sh -c "composer install &&
             php artisan key:generate &&
             php artisan migrate --seed &&
             php artisan storage:link &&
             php artisan serve --host=0.0.0.0 --port=8000"

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smartshop_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:8000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - smartshop_network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smartshop_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - smartshop_network

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: smartshop_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - smartshop_network

  # phpMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: smartshop_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: smartshop_user
      PMA_PASSWORD: smartshop_password
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - smartshop_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartshop_network:
    driver: bridge 